{
  "address": "0xd3ae2CB0217AdC8f4334C7F44f5Ed9E76DBa910F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_paymentToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isTeaching",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "language",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "ListingCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newScore",
          "type": "uint256"
        }
      ],
      "name": "ReputationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "languages",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "certifications",
          "type": "string[]"
        }
      ],
      "name": "UserCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isTeaching",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_language",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "createListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_languages",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_certifications",
          "type": "string[]"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_language",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isTeaching",
          "type": "bool"
        }
      ],
      "name": "getActiveListings",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "creators",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "rates",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "languages",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "certifications",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "reputation",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserListings",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isTeaching",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "language",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "internalType": "struct EduLingo.Listing[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newToken",
          "type": "address"
        }
      ],
      "name": "updatePaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newFee",
          "type": "uint256"
        }
      ],
      "name": "updatePlatformFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_score",
          "type": "uint256"
        }
      ],
      "name": "updateReputation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_languages",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_certifications",
          "type": "string[]"
        }
      ],
      "name": "updateUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userListings",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isTeaching",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "language",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reputation",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x21116a932b415fbc52c71d5c887d2e4c3a96871c6c9b18646a721b89a23f680e",
  "receipt": {
    "to": null,
    "from": "0x6666ed7c7dd244d941279A334C1a28a7106839D4",
    "contractAddress": "0xd3ae2CB0217AdC8f4334C7F44f5Ed9E76DBa910F",
    "transactionIndex": 2,
    "gasUsed": "17573102",
    "logsBloom": "0x
    "blockHash": "0x2153d8a094c59933028f9c889187e2f45086acaa9df358b59f77022a7fe4c7b7",
    "transactionHash": "0x21116a932b415fbc52c71d5c887d2e4c3a96871c6c9b18646a721b89a23f680e",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 11746944,
        "transactionHash": "0x21116a932b415fbc52c71d5c887d2e4c3a96871c6c9b18646a721b89a23f680e",
        "address": "0xd3ae2CB0217AdC8f4334C7F44f5Ed9E76DBa910F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006666ed7c7dd244d941279a334c1a28a7106839d4"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x2153d8a094c59933028f9c889187e2f45086acaa9df358b59f77022a7fe4c7b7"
      }
    ],
    "blockNumber": 11746944,
    "cumulativeGasUsed": "18114184",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x805349Ac5bd0D25d5cE7E34f7bC28FCCA3e6898e"
  ],
  "numDeployments": 1,
  "solcInputHash": "d5bcd95a384385b8535fc70634ba409b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isTeaching\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"ListingCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newScore\",\"type\":\"uint256\"}],\"name\":\"ReputationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"languages\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"certifications\",\"type\":\"string[]\"}],\"name\":\"UserCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isTeaching\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"_language\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"createListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_languages\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_certifications\",\"type\":\"string[]\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_language\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isTeaching\",\"type\":\"bool\"}],\"name\":\"getActiveListings\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"creators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"rates\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"languages\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"certifications\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"reputation\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserListings\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isTeaching\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct EduLingo.Listing[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newToken\",\"type\":\"address\"}],\"name\":\"updatePaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"updatePlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_score\",\"type\":\"uint256\"}],\"name\":\"updateReputation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_languages\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_certifications\",\"type\":\"string[]\"}],\"name\":\"updateUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userListings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isTeaching\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reputation\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contract.sol\":\"EduLingo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/contract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract EduLingo is ReentrancyGuard, Ownable {\\n\\tstruct User {\\n\\t\\tstring[] languages; // Languages the user knows\\n\\t\\tstring[] certifications; // User's certifications\\n\\t\\tuint256 reputation; // Reputation score (0-100)\\n\\t\\tbool exists; // Check if user exists\\n\\t}\\n\\n\\tstruct Listing {\\n\\t\\taddress creator; // Who created the listing\\n\\t\\tbool isTeaching; // true = teaching, false = learning\\n\\t\\tstring language; // Language for the listing\\n\\t\\tuint256 rate; // Rate per hour in tokens\\n\\t\\tbool isActive; // If the listing is active\\n\\t}\\n\\n\\t// State variables\\n\\tmapping(address => User) public users;\\n\\tmapping(address => Listing[]) public userListings;\\n\\tuint256 public platformFee = 5; // 5%\\n\\tIERC20 public paymentToken;\\n\\n\\t// Events\\n\\tevent UserCreated(\\n\\t\\taddress indexed user,\\n\\t\\tstring[] languages,\\n\\t\\tstring[] certifications\\n\\t);\\n\\tevent ListingCreated(\\n\\t\\taddress indexed creator,\\n\\t\\tbool isTeaching,\\n\\t\\tstring language,\\n\\t\\tuint256 rate\\n\\t);\\n\\tevent ReputationUpdated(address indexed user, uint256 newScore);\\n\\n\\tconstructor(address _paymentToken) {\\n\\t\\tpaymentToken = IERC20(_paymentToken);\\n\\t}\\n\\n\\t// User Management\\n\\tfunction createUser(\\n\\t\\tstring[] memory _languages,\\n\\t\\tstring[] memory _certifications\\n\\t) external {\\n\\t\\trequire(!users[msg.sender].exists, \\\"User already exists\\\");\\n\\t\\trequire(_languages.length > 0, \\\"Must specify at least one language\\\");\\n\\n\\t\\tusers[msg.sender] = User({\\n\\t\\t\\tlanguages: _languages,\\n\\t\\t\\tcertifications: _certifications,\\n\\t\\t\\treputation: 50, // Starting reputation\\n\\t\\t\\texists: true\\n\\t\\t});\\n\\n\\t\\temit UserCreated(msg.sender, _languages, _certifications);\\n\\t}\\n\\n\\tfunction updateUser(\\n\\t\\tstring[] memory _languages,\\n\\t\\tstring[] memory _certifications\\n\\t) external {\\n\\t\\trequire(users[msg.sender].exists, \\\"User does not exist\\\");\\n\\t\\trequire(_languages.length > 0, \\\"Must specify at least one language\\\");\\n\\n\\t\\tUser storage user = users[msg.sender];\\n\\t\\tuser.languages = _languages;\\n\\t\\tuser.certifications = _certifications;\\n\\n\\t\\temit UserCreated(msg.sender, _languages, _certifications);\\n\\t}\\n\\n\\t// Listing Management\\n\\tfunction createListing(\\n\\t\\tbool _isTeaching,\\n\\t\\tstring memory _language,\\n\\t\\tuint256 _rate\\n\\t) external {\\n\\t\\trequire(users[msg.sender].exists, \\\"Create user profile first\\\");\\n\\n\\t\\tListing memory newListing = Listing({\\n\\t\\t\\tcreator: msg.sender,\\n\\t\\t\\tisTeaching: _isTeaching,\\n\\t\\t\\tlanguage: _language,\\n\\t\\t\\trate: _rate,\\n\\t\\t\\tisActive: true\\n\\t\\t});\\n\\n\\t\\tuserListings[msg.sender].push(newListing);\\n\\n\\t\\temit ListingCreated(msg.sender, _isTeaching, _language, _rate);\\n\\t}\\n\\n\\t// Reputation System\\n\\tfunction updateReputation(\\n\\t\\taddress _user,\\n\\t\\tuint256 _score\\n\\t) external onlyOwner {\\n\\t\\trequire(users[_user].exists, \\\"User does not exist\\\");\\n\\t\\trequire(_score <= 100, \\\"Score must be between 0 and 100\\\");\\n\\n\\t\\tusers[_user].reputation = _score;\\n\\n\\t\\temit ReputationUpdated(_user, _score);\\n\\t}\\n\\n\\t// View Functions\\n\\tfunction getUser(\\n\\t\\taddress _user\\n\\t)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\tstring[] memory languages,\\n\\t\\t\\tstring[] memory certifications,\\n\\t\\t\\tuint256 reputation,\\n\\t\\t\\tbool exists\\n\\t\\t)\\n\\t{\\n\\t\\tUser storage user = users[_user];\\n\\t\\treturn (\\n\\t\\t\\tuser.languages,\\n\\t\\t\\tuser.certifications,\\n\\t\\t\\tuser.reputation,\\n\\t\\t\\tuser.exists\\n\\t\\t);\\n\\t}\\n\\n\\tfunction getUserListings(\\n\\t\\taddress _user\\n\\t) external view returns (Listing[] memory) {\\n\\t\\treturn userListings[_user];\\n\\t}\\n\\n\\tfunction getActiveListings(\\n\\t\\tstring memory _language,\\n\\t\\tbool _isTeaching\\n\\t)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (address[] memory creators, uint256[] memory rates)\\n\\t{\\n\\t\\tuint256 count = 0;\\n\\t\\t// First count matching listings\\n\\t\\tfor (uint256 i = 0; i < userListings[msg.sender].length; i++) {\\n\\t\\t\\tListing memory listing = userListings[msg.sender][i];\\n\\t\\t\\tif (\\n\\t\\t\\t\\tlisting.isActive &&\\n\\t\\t\\t\\tlisting.isTeaching == _isTeaching &&\\n\\t\\t\\t\\tkeccak256(bytes(listing.language)) ==\\n\\t\\t\\t\\tkeccak256(bytes(_language))\\n\\t\\t\\t) {\\n\\t\\t\\t\\tcount++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Create return arrays\\n\\t\\tcreators = new address[](count);\\n\\t\\trates = new uint256[](count);\\n\\n\\t\\t// Fill return arrays\\n\\t\\tuint256 index = 0;\\n\\t\\tfor (uint256 i = 0; i < userListings[msg.sender].length; i++) {\\n\\t\\t\\tListing memory listing = userListings[msg.sender][i];\\n\\t\\t\\tif (\\n\\t\\t\\t\\tlisting.isActive &&\\n\\t\\t\\t\\tlisting.isTeaching == _isTeaching &&\\n\\t\\t\\t\\tkeccak256(bytes(listing.language)) ==\\n\\t\\t\\t\\tkeccak256(bytes(_language))\\n\\t\\t\\t) {\\n\\t\\t\\t\\tcreators[index] = listing.creator;\\n\\t\\t\\t\\trates[index] = listing.rate;\\n\\t\\t\\t\\tindex++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn (creators, rates);\\n\\t}\\n\\n\\t// Admin Functions\\n\\tfunction updatePlatformFee(uint256 _newFee) external onlyOwner {\\n\\t\\trequire(_newFee <= 10, \\\"Fee too high\\\"); // Max 10%\\n\\t\\tplatformFee = _newFee;\\n\\t}\\n\\n\\tfunction updatePaymentToken(address _newToken) external onlyOwner {\\n\\t\\tpaymentToken = IERC20(_newToken);\\n\\t}\\n}\\n\",\"keccak256\":\"0x5c276578b0e0df1e7f215ba4dc53793f87b5d1acdf17e2329823d5067bb99b7c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 123,
        "contract": "contracts/contract.sol:EduLingo",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/contract.sol:EduLingo",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 453,
        "contract": "contracts/contract.sol:EduLingo",
        "label": "users",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(User)437_storage)"
      },
      {
        "astId": 459,
        "contract": "contracts/contract.sol:EduLingo",
        "label": "userListings",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_struct(Listing)448_storage)dyn_storage)"
      },
      {
        "astId": 462,
        "contract": "contracts/contract.sol:EduLingo",
        "label": "platformFee",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 465,
        "contract": "contracts/contract.sol:EduLingo",
        "label": "paymentToken",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20)255"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Listing)448_storage)dyn_storage": {
        "base": "t_struct(Listing)448_storage",
        "encoding": "dynamic_array",
        "label": "struct EduLingo.Listing[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)255": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_struct(Listing)448_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EduLingo.Listing[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Listing)448_storage)dyn_storage"
      },
      "t_mapping(t_address,t_struct(User)437_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EduLingo.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)437_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Listing)448_storage": {
        "encoding": "inplace",
        "label": "struct EduLingo.Listing",
        "members": [
          {
            "astId": 439,
            "contract": "contracts/contract.sol:EduLingo",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 441,
            "contract": "contracts/contract.sol:EduLingo",
            "label": "isTeaching",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 443,
            "contract": "contracts/contract.sol:EduLingo",
            "label": "language",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 445,
            "contract": "contracts/contract.sol:EduLingo",
            "label": "rate",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 447,
            "contract": "contracts/contract.sol:EduLingo",
            "label": "isActive",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(User)437_storage": {
        "encoding": "inplace",
        "label": "struct EduLingo.User",
        "members": [
          {
            "astId": 429,
            "contract": "contracts/contract.sol:EduLingo",
            "label": "languages",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 432,
            "contract": "contracts/contract.sol:EduLingo",
            "label": "certifications",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 434,
            "contract": "contracts/contract.sol:EduLingo",
            "label": "reputation",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 436,
            "contract": "contracts/contract.sol:EduLingo",
            "label": "exists",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}